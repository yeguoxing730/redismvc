<?xml version="1.0" encoding="UTF-8"?>
<!-- configuration status的级别指的是log4j2自己本身的log，一般WARN就足以。
 monitorInterval强烈要求加上，本例表示每5分钟（300秒）重新读取配置文件，我们可以准实时地修改log的级别。 -->
<configuration status="WARN" monitorInterval="300">
    <!-- appenders中定义log的目的地，本例第一个了名字为Console的appender，为SYSTEM_OUT方式输出到Console -->
    <appenders>
        <Console name="Console" target="SYSTEM_OUT">
            <PatternLayout pattern="%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n"/>
        </Console>
        <File name="log" fileName="log/test.log" append="false">
            <PatternLayout pattern="%d{HH:mm:ss.SSS} %-5level %class{36} %L %M - %msg%xEx%n"/>
        </File>
        <!-- 这个会打印出所有的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档-->
        <RollingFile name="RollingFile" fileName="logs/app.log"
                     filePattern="log/$${date:yyyy-MM}/app-%d{MM-dd-yyyy}-%i.log.gz">
            <PatternLayout pattern="%d{yyyy-MM-dd 'at' HH:mm:ss z} %-5level %class{36} %L %M - %msg%xEx%n"/>
            <SizeBasedTriggeringPolicy size="50MB"/>
            <!-- DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件，这里设置了20 -->
            <DefaultRolloverStrategy max="20"/>
        </RollingFile>
    </appenders>

    <!-- 代码中通过getLogger()获得的logger实例。本例只定义了根looger，采用名字叫做Console的appender，级别为debug -->
    <loggers>
        <root level="debug">
            <appender-ref ref="Console"/>
        </root>
        <root level="trace">
            <appender-ref ref="RollingFile"/>
            <appender-ref ref="Console"/>
        </root>
    </loggers>
</configuration>